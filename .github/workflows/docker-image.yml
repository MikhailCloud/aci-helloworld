name: Docker Image CI

on:
  push:
    branches: [ "master" ]
    paths:
      - '!.github/workflows/**'
      - '.github/workflows/docker-image.yml'
env:
  EVOAR_URI: demo1204.cr.cloud.ru
  SOURCE_CODE_DIRECTORY: app
  ORYX_BULLSEYE_BUILDER_IMAGE: 'mcr.microsoft.com/oryx/builder:debian-bullseye-20240124.1'
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: docker/setup-buildx-action@v3

    #- name: The setup-tools action adds crane and yj to the environment.
    #  uses: buildpacks/github-actions/setup-tools@v5.0.0
    
    - name: The setup-pack action adds pack to the environment.
      uses: buildpacks/github-actions/setup-pack@v5.0.0

    - name: pack build
      run: |
          # pack config default-builder gcr.io/buildpacks.builder:v1
          pack build ${{ env.EVOAR_URI }}/helloworld:build${{ github.sha }} --path ${{ env.SOURCE_CODE_DIRECTORY }} --builder ${{ env.ORYX_BULLSEYE_BUILDER_IMAGE }}
          # pack --publish  ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}

    

    

    # - name: Running Oryx to generate a Dockerfile
    #   id: oryx
    #   uses: microsoft/oryx/actions/oryx-dockerfile@main
    #   with: 
    #      source-directory: python
    #      platform: python
    #      platform-version: 3.7

    - name: Log in to Evolution Artifact Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.EVOAR_URI }}
        username: ${{ secrets.EVOAR_KEYID }}
        password: ${{ secrets.EVOAR_KEYSECRET }}
     
    - name: Building image and pushing to registry using Docker
      run: |
          docker build . -t ${{ env.EVOAR_URI }}/helloworld:build${{ github.sha }} -f ${{ steps.oryx.outputs.dockerfile-path }}
          
    - name: Build and push Backend container image to cloud evolution registry
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ env.EVOAR_URI }}/helloworld:build${{ github.sha }}
        platform: linux/amd64
        provenance: false
        file: ${{ steps.oryx.outputs.dockerfile-path }}
        context: ./
