name: Docker Image CI

on:
  push:
    branches: [ "master" ]
    paths:
      - '!.github/workflows/**'
      - '.github/workflows/docker-image.yml'
env:
  EVOAR_URI: demo1204.cr.cloud.ru
  SOURCE_CODE_DIRECTORY: 'app'
  ORYX_CLI_IMAGE: 'mcr.microsoft.com/oryx/cli:builder-debian-bullseye-20240124.1'
  old: 'mcr.microsoft.com/oryx/cli:builder-debian-buster-20230208.1'
  old2: 'mcr.microsoft.com/oryx/builder:20230208.1'
  RUNTIME_STACK: 'node:16'
  ORYX_BULLSEYE_BUILDER_IMAGE: 'mcr.microsoft.com/oryx/builder:debian-bullseye-20240124.1'
  DOCKERFILE_PATH: 'app/Dockerfile'
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: docker/setup-buildx-action@v3

    - name: Install pack CLI on non-Windows runner
      if: ${{ runner.os != 'Windows' && env.SOURCE_CODE_DIRECTORY != ''}}
      shell: bash
      run: (curl -sSL "https://github.com/buildpacks/pack/releases/download/v0.31.0/pack-v0.31.0-${{ runner.os }}.tgz" | sudo tar -C /usr/local/bin/ --no-same-owner -xzv pack)

    - name: Set Oryx++ Builder as default builder
      if: ${{ env.SOURCE_CODE_DIRECTORY != '' }}
      shell: bash
      run: pack config default-builder ${{env.ORYX_BULLSEYE_BUILDER_IMAGE}} 
      
      
    - name: Determine runtime stack if not provided
      if: ${{ env.SOURCE_CODE_DIRECTORY != '' && env.RUNTIME_STACK == '' }}
      shell: bash
      run: |
        docker run \
          --rm \
          -v ${{ env.SOURCE_CODE_DIRECTORY }}:/app \
          ${{env.ORYX_CLI_IMAGE}} \
          /bin/bash \
          -c "oryx dockerfile /app | head -n 1 | sed 's/ARG RUNTIME=//' >> /app/oryx-runtime.txt"
        RUNTIME_STACK=$(head -n 1 ${{ env.SOURCE_CODE_DIRECTORY }}/oryx-runtime.txt)
        echo "RUNTIME_STACK=${RUNTIME_STACK}" >> $GITHUB_ENV
        rm ${{ env.SOURCE_CODE_DIRECTORY }}/oryx-runtime.txt
        
    - name: Create runnable application image using Oryx++ Builder
      if: ${{ env.SOURCE_CODE_DIRECTORY != ''}}
      shell: bash
      run: |
        echo 'Attempting to enable experimental features for the pack CLI'
        pack config experimental true
        
        pack build \
         ${{ env.EVOAR_URI }}/helloworld:build${{ github.sha }} \
          --path ${{ env.SOURCE_CODE_DIRECTORY }} \
          --builder ${{env.ORYX_BULLSEYE_BUILDER_IMAGE}} \
          --run-image mcr.microsoft.com/oryx/node:20.11.1-debian-bullseye
          
    

    - name: Show Output
      run: echo ${{ steps.buildpack.outputs }}
  

    - name: Log in to Evolution Artifact Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.EVOAR_URI }}
        username: ${{ secrets.EVOAR_KEYID }}
        password: ${{ secrets.EVOAR_KEYSECRET }}

    - name: Check for existing Dockerfile in application source
      if: ${{ env.DOCKERFILE_PATH == '' }}
      shell: bash
      run: |
        dockerfilePath=${{ env.SOURCE_CODE_DIRECTORY }}/Dockerfile
        if [ -f "$dockerfilePath" ]; then echo "DOCKERFILE_PATH='Dockerfile'" >> $GITHUB_ENV; fi
        
    - name: Building image and pushing to registry using Docker
      run: |
          docker build -t ${{ env.EVOAR_URI }}/helloworld:build${{ github.sha }} -f ${{env.DOCKERFILE_PATH}} ${{ env.SOURCE_CODE_DIRECTORY }}
          
    - name: Build and push Backend container image to cloud evolution registry
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ env.EVOAR_URI }}/helloworld:build${{ github.sha }}
        platform: linux/amd64
        provenance: false
        file: ${{ env.SOURCE_CODE_DIRECTORY }}
        context: ./
